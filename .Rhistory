country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
cities <- cities %>%
mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
cities <- cities %>%
mutate(city = stringr::str_trim(city, side = "both"),
state = stringr::str_trim(state, side = "both"),
country = stringr::str_trim(country, side = "both"))
cities <- cities %>%
mutate(country = "USA") %>%
mutate(state = ifelse(state == "Illinois", "IL", state)) %>%
mutate(state = ifelse(state == "Il", "IL", state)) %>%
mutate(state = ifelse(state == "South Dakota", "SD", state))
usethis::use_data(cities, overwrite = TRUE, internal = TRUE)
## code to prepare `us` dataset goes here
library(sf)
library(rnaturalearth)
library(rgeos)
# get map data on  the US
usa <- rnaturalearth::ne_countries() %>%
sf::st_as_sf() %>%
filter(admin == "United States of America")
usa <- usa %>%
st_crop(.,
st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = st_crs(usa)))
usa <- usa %>%
select(sovereignt) %>%
rename(country_name = sovereignt)
usethis::use_data(usa, overwrite = TRUE, internal = TRUE)
document()
library(devtools)
devtools::install_github("jvieroe/dyadicdist")
library(dyadicdist)
dyadicdist::cities
check()
library(roxygen2)
document()
document()
library(devtools)
library(roxygen2)
devtools::install_github("jvieroe/dyadicdist")
check()
document()
library(devtools)
library(roxygen2)
install_github("jvieroe/dyadicdist")
check()
## code to prepare `cities` dataset goes here
library(tidyverse)
library(magrittr)
library(janitor)
library(rvest)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
read_html() %>%
html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
cities <- cities %>%
mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
cities <- cities %>%
mutate(city = stringr::str_trim(city, side = "both"),
state = stringr::str_trim(state, side = "both"),
country = stringr::str_trim(country, side = "both"))
cities <- cities %>%
mutate(country = "USA") %>%
mutate(state = ifelse(state == "Illinois", "IL", state)) %>%
mutate(state = ifelse(state == "Il", "IL", state)) %>%
mutate(state = ifelse(state == "South Dakota", "SD", state))
usethis::use_data(cities, overwrite = TRUE, internal = FALSE)
## code to prepare `us` dataset goes here
library(sf)
library(rnaturalearth)
library(rgeos)
# get map data on  the US
usa <- rnaturalearth::ne_countries() %>%
sf::st_as_sf() %>%
filter(admin == "United States of America")
usa <- usa %>%
st_crop(.,
st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = st_crs(usa)))
usa <- usa %>%
select(sovereignt) %>%
rename(country_name = sovereignt)
usethis::use_data(usa, overwrite = TRUE, internal = FALSE)
document()
class(usa)
head(usa)
library(roxygen2)
document()
library(devtools)
devtools::install_github("jvieroe/dyadicdist")
check()
devtools::load_all()
roxygen2::roxygenise()
document()
library(devtools)
devtools::install_github("jvieroe/dyadicdist")
check()
library(tidyverse)
library(dyadicdist)
cities <- dyadicdist::cities
usa <- dyadicdist::usa
library(sf)
city_sf <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
p <- ggplot() +
geom_sf(data = usa,
fill = "grey25", color = "white") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = .55,
fill = "chartreuse3", color = "NA") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = 1.0,
fill = "NA", color = "chartreuse3") +
theme_void() +
theme(panel.background = element_rect(fill = "#0D1117"),
plot.background = element_rect(fill = "#0D1117"))
p
knitr::plot_crop(p),
knitr::plot_crop(p,
quiet = T)
library(sf)
city_sf <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
p <- ggplot() +
geom_sf(data = usa,
fill = "grey25", color = "white") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = .55,
fill = "chartreuse3", color = "NA") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = 1.0,
fill = "NA", color = "chartreuse3") +
theme_void() +
theme(panel.background = element_rect(fill = "#0D1117"),
plot.background = element_rect(fill = "#0D1117"))
ggplot() +
geom_sf(data = usa,
fill = "grey25", color = "white") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = .55,
fill = "chartreuse3", color = "NA") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = 1.0,
fill = "NA", color = "chartreuse3") +
theme_void() +
theme(panel.background = element_rect(fill = "#0D1117"),
plot.background = element_rect(fill = "#0D1117"))
library(sf)
city_sf <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
ggplot() +
geom_sf(data = usa,
fill = "grey25", color = "white") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = .55,
fill = "chartreuse3", color = "NA") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = 1.0,
fill = "NA", color = "chartreuse3") +
theme_void() +
theme(panel.background = element_rect(fill = "#0D1117"),
plot.background = element_rect(fill = "#0D1117"))
```{r, warning=F, message=F, fig.width = 8, fig.height = 4}
library(sf)
city_sf <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
ggplot() +
geom_sf(data = usa,
fill = "grey25", color = "white") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = .55,
fill = "chartreuse3", color = "NA") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = 1.0,
fill = "NA", color = "chartreuse3") +
theme_void() +
theme(panel.background = element_rect(fill = "#0D1117"),
plot.background = element_rect(fill = "#0D1117"))
ggplot() +
geom_sf(data = usa,
fill = "grey25", color = "white") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = .55,
fill = "chartreuse3", color = "NA") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = 1.0,
fill = "NA", color = "chartreuse3") +
theme_void() +
theme(panel.background = element_rect(fill = "#0D1117"),
plot.background = element_rect(fill = "#0D1117"))
```{r, warning=F, message=F, fig.width = 8, fig.height = 4.5}
library(sf)
city_sf <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
ggplot() +
geom_sf(data = usa,
fill = "grey25", color = "white") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = .55,
fill = "chartreuse3", color = "NA") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = 1.0,
fill = "NA", color = "chartreuse3") +
theme_void() +
theme(panel.background = element_rect(fill = "#0D1117"),
plot.background = element_rect(fill = "#0D1117"))
```{r, warning=F, message=F, fig.width = 8, fig.height = 4.25}
library(sf)
city_sf <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
ggplot() +
geom_sf(data = usa,
fill = "grey25", color = "white") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = .55,
fill = "chartreuse3", color = "NA") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = 1.0,
fill = "NA", color = "chartreuse3") +
theme_void() +
theme(panel.background = element_rect(fill = "#0D1117"),
plot.background = element_rect(fill = "#0D1117"))
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
## code to prepare `cities` dataset goes here
usethis::use_pipe(export = TRUE)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
## code to prepare `cities` dataset goes here
library(magrittr)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
dplyr::mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
dplyr::select(-place_name)
## code to prepare `cities` dataset goes here
library(magrittr)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
cities <- rbind(rvest::html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
dplyr::mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
dplyr::select(-place_name)
cities <- cities %>%
dplyr::mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
cities <- cities %>%
dplyr::mutate(city = stringr::str_trim(city, side = "both"),
state = stringr::str_trim(state, side = "both"),
country = stringr::str_trim(country, side = "both"))
cities <- cities %>%
dplyr::mutate(country = "USA") %>%
dplyr::mutate(state = ifelse(state == "Illinois", "IL", state)) %>%
dplyr::mutate(state = ifelse(state == "Il", "IL", state)) %>%
dplyr::mutate(state = ifelse(state == "South Dakota", "SD", state))
usethis::use_data(cities, overwrite = TRUE, internal = FALSE)
# get map data on  the US
usa <- rnaturalearth::ne_countries() %>%
sf::st_as_sf() %>%
dplyr::filter(admin == "United States of America")
usa <- usa %>%
sf::st_crop(.,
st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = st_crs(usa)))
usa <- usa %>%
sf::st_crop(.,
sf::st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = st_crs(usa)))
usa <- usa %>%
sf::st_crop(.,
sf::st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = sf::st_crs(usa)))
usa <- usa %>%
dplyr::select(sovereignt) %>%
dplyr::rename(country_name = sovereignt)
## code to prepare `cities` dataset goes here
library(magrittr)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
cities <- rbind(rvest::html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
dplyr::mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
dplyr::select(-place_name)
cities <- cities %>%
dplyr::mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
cities <- cities %>%
dplyr::mutate(city = stringr::str_trim(city, side = "both"),
state = stringr::str_trim(state, side = "both"),
country = stringr::str_trim(country, side = "both"))
cities <- cities %>%
dplyr::mutate(country = "USA") %>%
dplyr::mutate(state = ifelse(state == "Illinois", "IL", state)) %>%
dplyr::mutate(state = ifelse(state == "Il", "IL", state)) %>%
dplyr::mutate(state = ifelse(state == "South Dakota", "SD", state))
usethis::use_data(cities, overwrite = TRUE, internal = FALSE)
## code to prepare `us` dataset goes here
library(sf)
library(rgeos)
# get map data on  the US
usa <- rnaturalearth::ne_countries() %>%
sf::st_as_sf() %>%
dplyr::filter(admin == "United States of America")
usa <- usa %>%
sf::st_crop(.,
sf::st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = sf::st_crs(usa)))
usa <- usa %>%
dplyr::select(sovereignt) %>%
dplyr::rename(country_name = sovereignt)
usethis::use_data(usa, overwrite = TRUE, internal = FALSE)
docu
library(devtools)
library(roxygen2)
document()
## code to prepare `cities` dataset goes here
library(magrittr)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
cities <- rbind(rvest::html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
dplyr::mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
dplyr::select(-place_name)
cities <- cities %>%
dplyr::mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
cities <- cities %>%
dplyr::mutate(city = stringr::str_trim(city, side = "both"),
state = stringr::str_trim(state, side = "both"),
country = stringr::str_trim(country, side = "both"))
cities <- cities %>%
dplyr::mutate(country = "USA") %>%
dplyr::mutate(state = ifelse(state == "Illinois", "IL", state)) %>%
dplyr::mutate(state = ifelse(state == "Il", "IL", state)) %>%
dplyr::mutate(state = ifelse(state == "South Dakota", "SD", state))
usethis::use_data(cities, overwrite = TRUE, internal = FALSE)
## code to prepare `us` dataset goes here
# get map data on  the US
usa <- rnaturalearth::ne_countries() %>%
sf::st_as_sf() %>%
dplyr::filter(admin == "United States of America")
usa <- usa %>%
sf::st_crop(.,
sf::st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = sf::st_crs(usa)))
usa <- usa %>%
dplyr::select(sovereignt) %>%
dplyr::rename(country_name = sovereignt)
usethis::use_data(usa, overwrite = TRUE, internal = FALSE)
document()
## code to prepare `cities` dataset goes here
library(magrittr)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
cities <- rbind(rvest::html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
dplyr::mutate(city = vapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = vapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = vapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
dplyr::select(-place_name)
cities <- cities %>%
dplyr::mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
dplyr::select(-place_name)
cities <- cities %>%
dplyr::mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
use_github_actions_badge(name = "R-CMD-check", repo_spec = NULL)
use_github_action_check_standard(
save_as = "R-CMD-check.yaml",
ignore = TRUE,
open = FALSE
)
document()
library(devtools)
library(roxygen2)
library(badger)
badge_license()
library(devtools)
library(roxygen2)
library(badger)
badger::badge_last_commit()
badger::badge_last_commit("jvieroe/dyadicdist")
badger::badge_cran_download()
library(devtools)
library(roxygen2)
devtools::install_github("jvieroe/dyadicdist")
check()
use_github_action_check_standard(
save_as = "R-CMD-check.yaml",
ignore = TRUE,
open = FALSE
)
``` r
if(!require("devtools")) install.packages("devtools")
library(devtools)
devtools::install_github("jvieroe/dyadicdist")
cities <- dyadicdist::cities
max(cities$longitude)
library(devtools)
library(roxygen2)
rm(cities)
document()
check()
check()
check()
check()
check()
document()
library(magrittr)
library(dplyr)
library(sf)
library(tidyr)
library(tibble)
library(rgdal)
library(readr)
library(stringr)
library(rlang)
library(tidyselect)
sessionInfo()
usethis::use_version("minor")
cities <- dyadicdist::cities
usa <- dyadicdist::usa
cities <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
cities <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
document()
document()
