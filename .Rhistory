<<<<<<< Updated upstream
library(tidyverse)
library(magrittr)
library(janitor)
library(rvest)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
read_html() %>%
html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
cities <- cities %>%
mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
cities <- cities %>%
mutate(city = stringr::str_trim(city, side = "both"),
state = stringr::str_trim(state, side = "both"),
country = stringr::str_trim(country, side = "both"))
cities <- cities %>%
mutate(country = "USA") %>%
mutate(state = ifelse(state == "Illinois", "IL", state)) %>%
mutate(state = ifelse(state == "Il", "IL", state)) %>%
mutate(state = ifelse(state == "South Dakota", "SD", state))
usethis::use_data(cities, overwrite = TRUE, internal = FALSE)
## code to prepare `us` dataset goes here
library(sf)
library(rnaturalearth)
library(rgeos)
# get map data on  the US
usa <- rnaturalearth::ne_countries() %>%
sf::st_as_sf() %>%
filter(admin == "United States of America")
usa <- usa %>%
st_crop(.,
st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = st_crs(usa)))
usa <- usa %>%
select(sovereignt) %>%
rename(country_name = sovereignt)
usethis::use_data(usa, overwrite = TRUE, internal = FALSE)
document()
class(usa)
head(usa)
library(roxygen2)
document()
library(devtools)
devtools::install_github("jvieroe/dyadicdist")
check()
devtools::load_all()
roxygen2::roxygenise()
document()
library(devtools)
devtools::install_github("jvieroe/dyadicdist")
check()
library(tidyverse)
library(dyadicdist)
cities <- dyadicdist::cities
usa <- dyadicdist::usa
library(sf)
city_sf <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
p <- ggplot() +
geom_sf(data = usa,
fill = "grey25", color = "white") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = .55,
fill = "chartreuse3", color = "NA") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = 1.0,
fill = "NA", color = "chartreuse3") +
theme_void() +
theme(panel.background = element_rect(fill = "#0D1117"),
plot.background = element_rect(fill = "#0D1117"))
p
knitr::plot_crop(p),
knitr::plot_crop(p,
quiet = T)
library(sf)
city_sf <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
p <- ggplot() +
geom_sf(data = usa,
fill = "grey25", color = "white") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = .55,
fill = "chartreuse3", color = "NA") +
geom_sf(data = city_sf,
size = 2.5, shape = 21, alpha = 1.0,
fill = "NA", color = "chartreuse3") +
=======
s_width = 1.650, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.10, s_y = .75,
s_width = 1.650, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.15, s_y = .75,
s_width = 1.60, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.15, s_y = .75,
s_width = 1.55, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.0, s_y = .75,
s_width = 1.55, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.1, s_y = .75,
s_width = 1.55, s_height = 2.20,
filename="man/figures/icon.svg")
library(devtools)
library(roxygen2)
usethis::use_logo()
usethis::use_logo("man/figures/icon.svg")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.1, s_y = .75,
s_width = 1.5, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="dyadicdist",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.1, s_y = .75,
s_width = 1.5, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.1, s_y = .75,
s_width = 1.5, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.1, s_y = 1,
s_width = 1.5, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.1, s_y = .85,
s_width = 1.5, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.0, s_y = .85,
s_width = 1.5, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.5,
p_size = 8,
s_x = 1.0, s_y = .85,
s_width = 1.5, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.45,
p_size = 8,
s_x = 1.0, s_y = .85,
s_width = 1.5, s_height = 2.20,
filename="man/figures/icon.svg")
font_choice <- "Architects Daughter"
#font_add_google("Gochi Hand", "gochi")
font_add_google(font_choice)
showtext_auto()
getwd()
# Cabin Sketch
font_choice <- "Architects Daughter"
#font_add_google("Gochi Hand", "gochi")
font_add_google(font_choice)
showtext_auto()
getwd()
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.45,
p_size = 8,
s_x = 1.0, s_y = .85,
s_width = 1.5, s_height = 2.20,
filename="man/figures/icon.svg")
p1
p1 <- ggplot() +
geom_sf(data = nc,
fill = "transparent",
color = "grey70") +
geom_sf(data = nc_lines1,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines2,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines3,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines4,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines5,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines6,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_cent,
size = 2) +
coord_sf(xlim = c(-80.25, -76.8),
ylim = c(34.935, 36.35)) +
>>>>>>> Stashed changes
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=5))
p1
p1 <- ggplot() +
geom_sf(data = nc,
fill = "transparent",
color = "grey70") +
geom_sf(data = nc_lines1,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines2,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines3,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines4,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines5,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines6,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_cent,
size = 2) +
coord_sf(xlim = c(-80.25, -76.8),
ylim = c(34.935, 36.35)) +
theme_void()
p1
p1 <- ggplot() +
geom_sf(data = nc,
fill = "transparent",
color = "grey70") +
geom_sf(data = nc_lines1,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines2,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines3,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines4,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines5,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines6,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_cent,
size = 2) +
coord_sf(xlim = c(-80.25, -76.8),
ylim = c(34.935, 36.35)) +
theme_void() +
theme(panel.border = element_rect(colour = "darkgreen",
fill = NA,
size = 1))
p1
p1 <- ggplot() +
geom_sf(data = nc,
fill = "transparent",
color = "grey70") +
geom_sf(data = nc_lines1,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines2,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines3,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines4,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines5,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines6,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_cent,
size = 2) +
coord_sf(xlim = c(-80.25, -76.8),
ylim = c(34.935, 36.35)) +
theme_void() +
theme(panel.border = element_rect(colour = "darkgreen",
fill = NA,
size = 2))
p1
p1 <- ggplot() +
geom_sf(data = nc,
fill = "transparent",
color = "grey70") +
geom_sf(data = nc_lines1,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines2,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines3,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines4,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines5,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines6,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_cent,
size = 2) +
coord_sf(xlim = c(-80.25, -76.8),
ylim = c(34.935, 36.35)) +
theme_void() +
theme(panel.border = element_rect(colour = "darkgreen",
fill = NA,
size = 1))
p1
ggsave(plot = last_plot(),
"man/figures/test.png")
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.45,
p_size = 8,
s_x = 1.0, s_y = .85,
s_width = 1.5, s_height = 2.20,
filename="man/figures/icon.svg")
p1 <- ggplot() +
geom_sf(data = nc,
fill = "transparent",
color = "grey70") +
geom_sf(data = nc_lines1,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines2,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines3,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines4,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines5,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines6,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_cent,
size = 2) +
coord_sf(xlim = c(-80.25, -76.8),
ylim = c(34.955, 36.25)) +
theme_void() +
theme(panel.border = element_rect(colour = "darkgreen",
fill = NA,
size = 1))
p1
p1 <- ggplot() +
geom_sf(data = nc,
fill = "transparent",
color = "grey70") +
geom_sf(data = nc_lines1,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines2,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines3,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines4,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines5,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines6,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_cent,
size = 2) +
coord_sf(xlim = c(-80.25, -76.8),
ylim = c(34.955, 36.45)) +
theme_void() +
theme(panel.border = element_rect(colour = "darkgreen",
fill = NA,
size = 1))
p1
ggsave(plot = last_plot(),
"man/figures/test.png")
# Cabin Sketch
font_choice <- "Architects Daughter"
#font_add_google("Gochi Hand", "gochi")
font_add_google(font_choice)
showtext_auto()
getwd()
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.45,
p_size = 8,
s_x = 1.0, s_y = .85,
s_width = 1.5, s_height = 2.20,
filename="man/figures/icon.svg")
p1 <- ggplot() +
geom_sf(data = nc,
fill = "transparent",
color = "grey70") +
geom_sf(data = nc_lines1,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines2,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines3,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines4,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines5,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_lines6,
color = "darkgreen",
size = 1) +
geom_sf(data = nc_cent,
size = 2) +
coord_sf(xlim = c(-80.25, -76.8),
ylim = c(34.925, 36.45)) +
theme_void() +
<<<<<<< Updated upstream
theme(panel.background = element_rect(fill = "#0D1117"),
plot.background = element_rect(fill = "#0D1117"))
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
## code to prepare `cities` dataset goes here
usethis::use_pipe(export = TRUE)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
## code to prepare `cities` dataset goes here
library(magrittr)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
dplyr::mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
dplyr::select(-place_name)
## code to prepare `cities` dataset goes here
library(magrittr)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
cities <- rbind(rvest::html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
dplyr::mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
dplyr::select(-place_name)
cities <- cities %>%
dplyr::mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
cities <- cities %>%
dplyr::mutate(city = stringr::str_trim(city, side = "both"),
state = stringr::str_trim(state, side = "both"),
country = stringr::str_trim(country, side = "both"))
cities <- cities %>%
dplyr::mutate(country = "USA") %>%
dplyr::mutate(state = ifelse(state == "Illinois", "IL", state)) %>%
dplyr::mutate(state = ifelse(state == "Il", "IL", state)) %>%
dplyr::mutate(state = ifelse(state == "South Dakota", "SD", state))
usethis::use_data(cities, overwrite = TRUE, internal = FALSE)
# get map data on  the US
usa <- rnaturalearth::ne_countries() %>%
sf::st_as_sf() %>%
dplyr::filter(admin == "United States of America")
usa <- usa %>%
sf::st_crop(.,
st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = st_crs(usa)))
usa <- usa %>%
sf::st_crop(.,
sf::st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = st_crs(usa)))
usa <- usa %>%
sf::st_crop(.,
sf::st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = sf::st_crs(usa)))
usa <- usa %>%
dplyr::select(sovereignt) %>%
dplyr::rename(country_name = sovereignt)
## code to prepare `cities` dataset goes here
library(magrittr)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
cities <- rbind(rvest::html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
dplyr::mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
dplyr::select(-place_name)
cities <- cities %>%
dplyr::mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
cities <- cities %>%
dplyr::mutate(city = stringr::str_trim(city, side = "both"),
state = stringr::str_trim(state, side = "both"),
country = stringr::str_trim(country, side = "both"))
cities <- cities %>%
dplyr::mutate(country = "USA") %>%
dplyr::mutate(state = ifelse(state == "Illinois", "IL", state)) %>%
dplyr::mutate(state = ifelse(state == "Il", "IL", state)) %>%
dplyr::mutate(state = ifelse(state == "South Dakota", "SD", state))
usethis::use_data(cities, overwrite = TRUE, internal = FALSE)
## code to prepare `us` dataset goes here
library(sf)
library(rgeos)
# get map data on  the US
usa <- rnaturalearth::ne_countries() %>%
sf::st_as_sf() %>%
dplyr::filter(admin == "United States of America")
usa <- usa %>%
sf::st_crop(.,
sf::st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = sf::st_crs(usa)))
usa <- usa %>%
dplyr::select(sovereignt) %>%
dplyr::rename(country_name = sovereignt)
usethis::use_data(usa, overwrite = TRUE, internal = FALSE)
docu
library(devtools)
library(roxygen2)
document()
## code to prepare `cities` dataset goes here
library(magrittr)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
cities <- rbind(rvest::html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
dplyr::mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
dplyr::select(-place_name)
cities <- cities %>%
dplyr::mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
cities <- cities %>%
dplyr::mutate(city = stringr::str_trim(city, side = "both"),
state = stringr::str_trim(state, side = "both"),
country = stringr::str_trim(country, side = "both"))
cities <- cities %>%
dplyr::mutate(country = "USA") %>%
dplyr::mutate(state = ifelse(state == "Illinois", "IL", state)) %>%
dplyr::mutate(state = ifelse(state == "Il", "IL", state)) %>%
dplyr::mutate(state = ifelse(state == "South Dakota", "SD", state))
usethis::use_data(cities, overwrite = TRUE, internal = FALSE)
## code to prepare `us` dataset goes here
# get map data on  the US
usa <- rnaturalearth::ne_countries() %>%
sf::st_as_sf() %>%
dplyr::filter(admin == "United States of America")
usa <- usa %>%
sf::st_crop(.,
sf::st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = sf::st_crs(usa)))
usa <- usa %>%
dplyr::select(sovereignt) %>%
dplyr::rename(country_name = sovereignt)
usethis::use_data(usa, overwrite = TRUE, internal = FALSE)
document()
## code to prepare `cities` dataset goes here
library(magrittr)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
rvest::read_html() %>%
rvest::html_nodes("table")
cities <- rbind(rvest::html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
dplyr::mutate(city = vapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = vapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = vapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
dplyr::select(-place_name)
cities <- cities %>%
dplyr::mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
dplyr::select(-place_name)
cities <- cities %>%
dplyr::mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
use_github_actions_badge(name = "R-CMD-check", repo_spec = NULL)
use_github_action_check_standard(
save_as = "R-CMD-check.yaml",
ignore = TRUE,
open = FALSE
)
document()
library(devtools)
library(roxygen2)
library(badger)
badge_license()
library(devtools)
library(roxygen2)
library(badger)
badger::badge_last_commit()
badger::badge_last_commit("jvieroe/dyadicdist")
badger::badge_cran_download()
library(devtools)
library(roxygen2)
devtools::install_github("jvieroe/dyadicdist")
check()
use_github_action_check_standard(
save_as = "R-CMD-check.yaml",
ignore = TRUE,
open = FALSE
)
``` r
if(!require("devtools")) install.packages("devtools")
library(devtools)
devtools::install_github("jvieroe/dyadicdist")
cities <- dyadicdist::cities
max(cities$longitude)
library(devtools)
library(roxygen2)
rm(cities)
document()
check()
check()
check()
check()
check()
document()
library(magrittr)
library(dplyr)
library(sf)
library(tidyr)
library(tibble)
library(rgdal)
library(readr)
library(stringr)
library(rlang)
library(tidyselect)
sessionInfo()
usethis::use_version("minor")
cities <- dyadicdist::cities
usa <- dyadicdist::usa
cities <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
cities <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
document()
document()
library(devtools)
library(roxygen2)
document()
document()
library(devtools)
library(roxygen2)
document()
library(devtools)
library(roxygen2)
check()
library(devtools)
library(roxygen2)
check()
#' US Cities
#'
#' A dataset containing the location of 10,000 US cities
#'
#' @format A tibble with 10000 rows and 11 variables:
#' @source \url{https://www.latlong.net/category/cities-236-15.html}
"cities"
library(devtools)
document()
install.packages("roxygen2")
library(devtools)
library(roxygen2)
library(devtools)
devtools::install_github("jvieroe/dyadicdist")
library(tidyverse)
library(dyadicdist)
df <- tibble::tribble(
~city_name, ~idvar, ~latitude, ~longitude,
"copenhagen", 5, 55.68, 12.58,
"stockholm", 2, 59.33, 18.07,
"oslo", 51, 59.91, 10.75
)
ddist(data = df,
id = "idvar")
library(dyadicdist)
library(tidyverse)
library(magrittr)
cities <- dyadicdist::cities
ddist(cities,
id = "id")
cities %>%
rename(lat = latitude,
lon = longitude) %>%
ddist(.,
id = "id",
latitude = "lat",
longitude = "lon") %>%
head(5)
library(devtools)
library(roxygen2)
document()
=======
theme(panel.border = element_rect(colour = "darkgreen",
fill = NA,
size = 1))
p1
ggsave(plot = last_plot(),
"man/figures/test.png")
# Cabin Sketch
font_choice <- "Architects Daughter"
#font_add_google("Gochi Hand", "gochi")
font_add_google(font_choice)
showtext_auto()
getwd()
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.45,
p_size = 8,
s_x = 1.0, s_y = .85,
s_width = 1.5, s_height = 2.20,
filename="man/figures/icon.svg")
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.45,
p_size = 8,
s_x = 1.0, s_y = .85,
s_width = 1.5, s_height = 2.10,
filename="man/figures/icon.svg")
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.45,
p_size = 8,
s_x = 1.0, s_y = .85,
s_width = 1.5, s_height = 2.0,
filename="man/figures/icon.svg")
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.45,
p_size = 8,
s_x = 1.0, s_y = .95,
s_width = 1.5, s_height = 2.0,
filename="man/figures/icon.svg")
sticker(p1, package="dyadicdist",
p_color = "darkgreen",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "darkgreen",
p_x = 1, p_y = 1.45,
p_size = 8,
s_x = 1.0, s_y = .875,
s_width = 1.5, s_height = 2.0,
filename="man/figures/icon.svg")
usethis::use_logo("man/figures/icon.svg")
usethis::use_logo("man/figures/icon.svg")
>>>>>>> Stashed changes
