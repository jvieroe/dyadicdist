(nrow(cities) * nrow(cities)/2)
#  duplicates = FALSE
dyadicdist::ddist(cities,
id = "id",
duplicates = FALSE) %>%
nrow()
# diagonal = FALSE and duplicates = FALSE
(nrow(cities) * (nro'w(cities)-1)/2)
# diagonal = FALSE and duplicates = FALSE
(nrow(cities) * (nrow(cities)-1)/2)
# --- calculate desired length of tibble
#  default call
dyadicdist::ddist(cities,
id = "id") %>%
nrow()
mean(c(2,4))
# duplicates = FALSE
(nrow(cities) * nrow(cities))/2
library(dyadicdist)
library(tidyverse)
df <- tibble::tribble(
~city_name, ~idvar, ~latitude, ~longitude,
"copenhagen", 5, 55.68, 12.58,
"stockholm", 2, 59.33, 18.07,
"oslo", 51, 59.91, 10.75
)
dyadicdist::ddist(data = df,
id = "idvar")
library(tidyverse)
library(magrittr)
library(janitor)
library(rvest)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
read_html() %>%
html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
cities <- cities %>%
mutate(id = row_number())
# Inspect it!
cities
# diagonal = FALSE
nrow(cities) * (nrow(cities)-1)
# duplicates = FALSE
(nrow(cities)*nrow(cities))
# duplicates = FALSE
(nrow(cities)*nrow(cities)/2)
#  duplicates = FALSE
dyadicdist::ddist(cities,
id = "id",
duplicates = FALSE) %>%
nrow()
# diagonal = FALSE and duplicates = FALSE
(nrow(cities) * (nrow(cities)-1)/2)
#  diagonal = FALSE and duplicates = FALSE
dyadicdist::ddist(cities,
id = "id",
diagonal = FALSE,
duplicates = FALSE) %>%
nrow()
# diagonal = FALSE and duplicates = FALSE
(nrow(cities) * (nrow(cities)-1)/2)
# duplicates = FALSE
(nrow(cities)*nrow(cities)/2)
#  duplicates = FALSE
dyadicdist::ddist(cities,
id = "id",
duplicates = FALSE) %>%
nrow()
(100)/(100 - 100)
# duplicates = FALSE
(nrow(cities)*nrow(cities)/2)
# duplicates = FALSE
(nrow(cities)*nrow(cities))/2
# diagonal = FALSE and duplicates = FALSE
(nrow(cities) * (nrow(cities)-1)/2)
#  diagonal = FALSE and duplicates = FALSE
dyadicdist::ddist(cities,
id = "id",
diagonal = FALSE,
duplicates = FALSE) %>%
nrow()
nrow(cities)
# duplicates = FALSE
(nrow(cities) * (nrow(cities)-1)/2)
# duplicates = FALSE
(nrow(cities) * (nrow(cities)-1)/2)+nrow(cities)
#  duplicates = FALSE
dyadicdist::ddist(cities,
id = "id",
duplicates = FALSE) %>%
nrow()
(nrow(cities) * (nrow(cities)-1)/2)
(nrow(cities) * (nrow(cities))/2)
(nrow(cities) * (nrow(cities)-1)/2)
dyadicdist::ddist(cities,
id = "id",
diagonal = FALSE,
duplicates = FALSE) %>%
nrow()
(nrow(cities) * (nrow(cities)-1)/2)
library(dyadicdist)
library(tidyverse)
df <- tibble::tribble(
~city_name, ~idvar, ~latitude, ~longitude,
"copenhagen", 5, 55.68, 12.58,
"stockholm", 2, 59.33, 18.07,
"oslo", 51, 59.91, 10.75
)
dyadicdist::ddist(data = df,
id = "idvar")
library(magrittr)
library(janitor)
library(rvest)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
read_html() %>%
html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
cities <- cities %>%
mutate(id = row_number())
# Inspect it!
cities
# Plot the cities
library(sf)
library(rnaturalearth)
library(rgeos)
# get map data on  the US
usa <- rnaturalearth::ne_countries() %>%
sf::st_as_sf() %>%
filter(admin == "United States of America")
usa <- usa %>%
st_crop(.,
st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = st_crs(usa)))
city_sf <- cities %>%
st_as_sf(.,
coords = c("longitude", "latitude"),
crs = 4326)
ggplot() +
geom_sf(data = usa,
fill = "grey25",
color = "white") +
geom_sf(data = city_sf,
size = 2,
shape = 21,
fill = "chartreuse3", color = "NA",
alpha = .55) +
geom_sf(data = city_sf,
size = 2,
shape = 21,
fill = "NA", color = "chartreuse3",
alpha = 1.0) +
theme_void() +
theme(panel.background = element_rect(fill = "#0D1117"),
plot.background = element_rect(fill = "#0D1117"))
ggplot() +
geom_sf(data = usa,
fill = "grey25",
color = "white") +
geom_sf(data = city_sf,
size = 2,
shape = 21,
fill = "chartreuse3", color = "NA",
alpha = .55) +
geom_sf(data = city_sf,
size = 2.5,
shape = 21,
fill = "NA", color = "chartreuse3",
alpha = 1.0) +
theme_void() +
theme(panel.background = element_rect(fill = "#0D1117"),
plot.background = element_rect(fill = "#0D1117"))
dyadicdist::ddist(cities,
id = "id")
cities_new <- cities %>%
rename(lat = latitude,
lon = longitude)
dyadicdist::ddist(cities_new,
id = "id",
latitude = "lat",
longitude = "lon") %>%
head(2)
nrow(cities)*nrow(cities)
dyadicdist::ddist(cities,
id = "id") %>%
nrow()
nrow(cities) * (nrow(cities)-1)
dyadicdist::ddist(cities,
id = "id",
diagonal = FALSE) %>%
nrow()
(nrow(cities) * (nrow(cities)-1)/2)+nrow(cities)
dyadicdist::ddist(cities,
id = "id",
duplicates = FALSE) %>%
nrow()
(nrow(cities) * (nrow(cities)-1)/2)
dyadicdist::ddist(cities,
id = "id",
diagonal = FALSE,
duplicates = FALSE) %>%
nrow()
dyadicdist::ddist(cities,
id = "id")
dyadicdist::ddist(cities,
id = "id",
crs_transform = T)
dyadicdist::ddist(cities,
id = "id",
crs_transform = T,
new_crs = 3359)
library(devtools)
library(roxygen2)
document()
document()
library(devtools)
library(roxygen2)
document()
library(devtools)
library(roxygen2)
document()
library(devtools)
librar
library(roxygen2)
usethis::use_pipe()
document()
library(devtools)
library(roxygen2)
document()
library(devtools)
library(roxygen2)
document()
library(devtools)
library(roxygen2)
document()
document()
?tibble
??tibble
library(devtools)
library(roxygen2)
document()
library(devtools)
library(roxygen2)
library(devtools)
library(roxygen2)
usethis::use_data_raw()
library(tidyverse)
library(magrittr)
library(janitor)
library(rvest)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
read_html() %>%
html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
## code to prepare `cities` dataset goes here
library(tidyverse)
library(magrittr)
library(janitor)
library(rvest)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
read_html() %>%
html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
cities <- cities %>%
mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
# Inspect it!
cities
any(duplicated(cities$id))
cities <- cities %>%
mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = T))
# Inspect it!
cities
any(duplicated(cities$id))
## code to prepare `cities` dataset goes here
library(tidyverse)
library(magrittr)
library(janitor)
library(rvest)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
read_html() %>%
html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
cities <- cities %>%
mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
# Inspect it!
cities
any(duplicated(cities$id))
View(cities)
## code to prepare `cities` dataset goes here
library(tidyverse)
library(magrittr)
library(janitor)
library(rvest)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
read_html() %>%
html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
cities <- cities %>%
mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
table(cities$state)
cities <- cities %>%
mutate(country = "USA",
state = ifelse(state == "Illinois", "IL", state))
table(cities$state)
## code to prepare `cities` dataset goes here
library(tidyverse)
library(magrittr)
library(janitor)
library(rvest)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
read_html() %>%
html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
cities <- cities %>%
mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
table(cities$state)
cities <- cities %>%
mutate(country = "USA") %>%
mutate(state = ifelse(state == "Illinois", "IL", state))
table(cities$state)
cities <- cities %>%
mutate(country = "USA") %>%
mutate(state = ifelse(state == " Illinois", "IL", state))
cities <- cities %>%
mutate(country = "USA") %>%
mutate(state = ifelse(state == " Illinois", "IL", state))
table(cities$state)
## code to prepare `cities` dataset goes here
library(tidyverse)
library(magrittr)
library(janitor)
library(rvest)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
read_html() %>%
html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
cities <- cities %>%
mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
table(cities$state)
cities <- cities %>%
mutate(country = "USA") %>%
mutate(state = ifelse(state == " Illinois", "IL", state))
table(cities$state)
## code to prepare `cities` dataset goes here
library(tidyverse)
library(magrittr)
library(janitor)
library(rvest)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
read_html() %>%
html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
cities <- cities %>%
mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
cities <- cities %>%
mutate(city = stringr::str_trim(city, side = "both"),
state = stringr::str_trim(state, side = "both"),
country = stringr::str_trim(country, side = "both"))
table(cities$state)
cities <- cities %>%
mutate(country = "USA") %>%
mutate(state = ifelse(state == " Illinois", "IL", state))
cities <- cities %>%
mutate(country = "USA") %>%
mutate(state = ifelse(state == "Illinois", "IL", state))
table(cities$state)
cities %>% filter(state == "Il") %>% head()
cities <- cities %>%
mutate(country = "USA") %>%
mutate(state = ifelse(state == "Illinois", "IL", state)) %>%
mutate(state = ifelse(state == "Il", "IL", state))
table(cities$state)
## code to prepare `cities` dataset goes here
library(tidyverse)
library(magrittr)
library(janitor)
library(rvest)
city_url <- "https://www.latlong.net/category/cities-236-15.html"
cities <- city_url %>%
read_html() %>%
html_nodes("table")
cities <- rbind(html_table(cities[[1]])) %>%
janitor::clean_names()
cities <- cities %>%
mutate(city = sapply(strsplit(as.character(cities$place_name),","), "[", 1),
state = sapply(strsplit(as.character(cities$place_name),","), "[", 2),
country = sapply(strsplit(as.character(cities$place_name),","), "[", 3)) %>%
select(-place_name)
cities <- cities %>%
mutate(id = base::sample.int((nrow(.)*5),
nrow(.),
replace = FALSE))
cities <- cities %>%
mutate(city = stringr::str_trim(city, side = "both"),
state = stringr::str_trim(state, side = "both"),
country = stringr::str_trim(country, side = "both"))
cities <- cities %>%
mutate(country = "USA") %>%
mutate(state = ifelse(state == "Illinois", "IL", state)) %>%
mutate(state = ifelse(state == "Il", "IL", state)) %>%
mutate(state = ifelse(state == "South Dakota", "SD", state))
table(cities$state)
usethis::use_data(cities, overwrite = TRUE)
document()
usethis::use_data_raw()
## code to prepare `us` dataset goes here
library(sf)
library(rnaturalearth)
library(rgeos)
library(sf)
library(rnaturalearth)
library(rgeos)
# get map data on  the US
usa <- rnaturalearth::ne_countries() %>%
sf::st_as_sf() %>%
filter(admin == "United States of America")
usa <- usa %>%
st_crop(.,
st_bbox(c(xmin = -128,
xmax = -57,
ymin = 20,
ymax = 50),
crs = st_crs(usa)))
View(usa)
usa <- usa %>%
select(sovereignt)
View(usa)
usa <- usa %>%
select(sovereignt) %>%
rename(country_name = sovereignt)
usethis::use_data(usa, overwrite = TRUE)
document()
library(sf)
