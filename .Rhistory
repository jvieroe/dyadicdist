crs = 4326)
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(cities,
id = "id",
diagonal = TRUE,
duplicates = TRUE)),
nrow(df) * nrow(df))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(cities,
id = "id",
diagonal = FALSE,
duplicates = TRUE)),
(nrow(df) * nrow(df)) - nrow(df))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(cities,
id = "id",
diagonal = TRUE,
duplicates = FALSE)),
(nrow(df)*nrow(df))/2+(nrow(df)/2))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(cities,
id = "id",
diagonal = FALSE,
duplicates = FALSE)),
(nrow(df)*nrow(df))/2-(nrow(df)/2))
})
context("Test input data")
library(dplyr)
library(magrittr)
df <- dyadicdist::cities
df <- df %>%
sf::st_as_sf(coords = c("longitude", "latitude"),
crs = 4326)
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(cities,
id = "id",
diagonal = TRUE,
duplicates = TRUE)),
nrow(df) * nrow(df))
})
context("Test ddist")
library(dplyr)
library(magrittr)
cities <- dyadicdist::cities
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist(cities,
id = "id",
diagonal = TRUE,
duplicates = TRUE)),
nrow(df) * nrow(df))
})
context("Test input data")
library(dplyr)
library(magrittr)
df <- dyadicdist::cities
df <- df %>%
sf::st_as_sf(coords = c("longitude", "latitude"),
crs = 4326)
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = TRUE,
duplicates = TRUE)),
nrow(df) * nrow(df))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = FALSE,
duplicates = TRUE)),
(nrow(df) * nrow(df)) - nrow(df))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = TRUE,
duplicates = FALSE)),
(nrow(df)*nrow(df))/2+(nrow(df)/2))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = FALSE,
duplicates = FALSE)),
(nrow(df)*nrow(df))/2-(nrow(df)/2))
})
rm(cities, dd)
?ddist
dyadicdist::ddist(cities,
id = "id",
diagonal = FALSE,
duplicates = FALSE) %>%
pull(distance_unit)
dd <- ddist(df, id = "id")
context("Test ddist")
library(dplyr)
library(magrittr)
df <- dyadicdist::cities
dd <- ddist(df, id = "id")
View(dd)
dyadicdist::ddist(cities,
id = "id",
diagonal = FALSE,
duplicates = FALSE) %>%
pull(distance_units)
dyadicdist::ddist(cities,
id = "id",
diagonal = FALSE,
duplicates = FALSE) %>%
pull(distance_units) %>%
unique()
test_that("distance units work", {
expect_equal(dyadicdist::ddist(cities,
id = "id",
diagonal = FALSE,
duplicates = FALSE) %>%
pull(distance_units) %>%
unique(),
"m")
})
expect_equal(dyadicdist::ddist(cities,
id = "id") %>%
pull(distance_units) %>%
unique(),
"m")
dd <- ddist(df, id = "id",
crs_transform = FALSE, new_crs = 3359)
dd <- ddist(df, id = "id",
crs_transform = T, new_crs = 3359)
test_that("distance units work", {
expect_equal(dyadicdist::ddist(cities,
id = "id",
crs_transform = TRUE) %>%
pull(distance_units) %>%
unique(),
"US_survey_foot")
})
test_that("distance units work", {
expect_equal(dyadicdist::ddist(cities,
id = "id",
crs_transform = TRUE,
new_crs = 3359) %>%
pull(distance_units) %>%
unique(),
"US_survey_foot")
})
context("Test ddist")
library(dplyr)
library(magrittr)
df <- dyadicdist::cities
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist(cities,
id = "id",
diagonal = TRUE,
duplicates = TRUE)),
nrow(df) * nrow(df))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist(cities,
id = "id",
diagonal = FALSE,
duplicates = TRUE)),
(nrow(df) * nrow(df)) - nrow(df))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist(cities,
id = "id",
diagonal = TRUE,
duplicates = FALSE)),
(nrow(df)*nrow(df))/2+(nrow(df)/2))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist(cities,
id = "id",
diagonal = FALSE,
duplicates = FALSE)),
(nrow(df)*nrow(df))/2-(nrow(df)/2))
})
test_that("distance units work", {
expect_equal(dyadicdist::ddist(df,
id = "id") %>%
pull(distance_units) %>%
unique(),
"m")
})
test_that("distance units work", {
expect_equal(dyadicdist::ddist(df,
id = "id",
crs_transform = TRUE,
new_crs = 3359) %>%
pull(distance_units) %>%
unique(),
"US_survey_foot")
})
context("Test input data")
library(dplyr)
library(magrittr)
df <- dyadicdist::cities
df <- df %>%
sf::st_as_sf(coords = c("longitude", "latitude"),
crs = 4326)
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = TRUE,
duplicates = TRUE)),
nrow(df) * nrow(df))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = FALSE,
duplicates = TRUE)),
(nrow(df) * nrow(df)) - nrow(df))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = TRUE,
duplicates = FALSE)),
(nrow(df)*nrow(df))/2+(nrow(df)/2))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = FALSE,
duplicates = FALSE)),
(nrow(df)*nrow(df))/2-(nrow(df)/2))
})
test_that("distance units work", {
expect_equal(dyadicdist::ddist(df,
id = "id") %>%
pull(distance_units) %>%
unique(),
"m")
})
test_that("distance units work", {
expect_equal(dyadicdist::ddist(df,
id = "id",
crs_transform = TRUE,
new_crs = 3359) %>%
pull(distance_units) %>%
unique(),
"US_survey_foot")
})
context("Test input data")
library(dplyr)
library(magrittr)
df <- dyadicdist::cities
df <- df %>%
sf::st_as_sf(coords = c("longitude", "latitude"),
crs = 4326)
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = TRUE,
duplicates = TRUE)),
nrow(df) * nrow(df))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = FALSE,
duplicates = TRUE)),
(nrow(df) * nrow(df)) - nrow(df))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = TRUE,
duplicates = FALSE)),
(nrow(df)*nrow(df))/2+(nrow(df)/2))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = FALSE,
duplicates = FALSE)),
(nrow(df)*nrow(df))/2-(nrow(df)/2))
})
test_that("distance units work", {
expect_equal(dyadicdist::ddist(df,
id = "id") %>%
pull(distance_units) %>%
unique(),
"m")
})
expect_equal(dyadicdist::ddist_sf(df,
id = "id") %>%
pull(distance_units) %>%
unique(),
"m")
test_that("distance units work", {
expect_equal(dyadicdist::ddist_sf(df,
id = "id") %>%
pull(distance_units) %>%
unique(),
"m")
})
test_that("distance units work", {
expect_equal(dyadicdist::ddist_sf(df,
id = "id",
crs_transform = TRUE,
new_crs = 3359) %>%
pull(distance_units) %>%
unique(),
"US_survey_foot")
})
context("Test ddist_xy_sf")
library(dplyr)
library(magrittr)
df <- dyadicdist::cities
df <- df %>%
sf::st_as_sf(coords = c("longitude", "latitude"),
crs = 4326)
df_1 <- df %>%
filter(state == "CA")
df_2 <- df_sf %>%
filter(state == "TX")
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = TRUE,
duplicates = TRUE)),
nrow(df_1) * nrow(df_2))
})
context("Test ddist_xy_sf")
library(dplyr)
library(magrittr)
df <- dyadicdist::cities
df <- df %>%
sf::st_as_sf(coords = c("longitude", "latitude"),
crs = 4326)
df_1 <- df %>%
filter(state == "CA")
df_2 <- df %>%
filter(state == "TX")
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_sf(df,
id = "id",
diagonal = TRUE,
duplicates = TRUE)),
nrow(df_1) * nrow(df_2))
})
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_xy_sf(x = df_1,
y = df_2,
id = "id",
diagonal = TRUE,
duplicates = TRUE)),
nrow(df_1) * nrow(df_2))
})
expect_equal(nrow(dyadicdist::ddist_xy_sf(x = df_1,
y = df_2,
id = "id")),
nrow(df_1) * nrow(df_2))
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_xy_sf(x = df_1,
y = df_2,
ids = c("id", "id"))),
nrow(df_1) * nrow(df_2))
})
nrow(dyadicdist::ddist_xy_sf(x = df_1,
y = df_2,
ids = c("id", "id"))
)
nrow(dyadicdist::ddist_xy_sf(x = df_1,
y = df_2,
ids = c("id", "id")))
nrow(df_1) * nrow(df_2)
nrow(dyadicdist::ddist_xy_sf(x = df_1,
y = df_2,
ids = c("id", "id")
)
)
?ddist_xy_sf
dyadicdist::ddist_xy_sf(x = df_1,
y = df_2,
ids = c("id", "id")
)
context("Test ddist_xy_sf")
library(dplyr)
library(magrittr)
df <- dyadicdist::cities
df <- df %>%
sf::st_as_sf(coords = c("longitude", "latitude"),
crs = 4326)
df_1 <- df %>%
filter(state == "CA")
df_2 <- df %>%
filter(state == "TX")
rm(dd)
View(df_1)
View(df_2)
context("Test ddist_xy_sf")
library(dplyr)
library(magrittr)
df <- dyadicdist::cities
# df <- df %>%
#   sf::st_as_sf(coords = c("longitude", "latitude"),
#                crs = 4326)
df_1 <- df %>%
filter(state == "CA")
df_2 <- df %>%
filter(state == "TX")
dyadicdist::ddist_xy(x = df_1,
y = df_2,
ids = c("id", "id")
)
context("Test ddisy_xy_sf")
library(dplyr)
library(magrittr)
df <- dyadicdist::cities
df_1 <- df %>%
filter(state == "CA")
df_2 <- df %>%
filter(state == "TX")
context("Test ddisy_xy_sf")
library(dplyr)
library(magrittr)
df <- dyadicdist::cities
df_1 <- df %>%
filter(state == "CA")
df_2 <- df %>%
filter(state == "TX")
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_xy(x = df_1,
y = df_2,
ids = c("id", "id"))
),
nrow(df_1) * nrow(df_2))
})
dyadicdist::ddist_xy(x = df_1,
y = df_2,
ids = c("id", "id"))
ddist_xy(x = df_1,
y = df_2,
ids = c("id", "id"))
test_that("output dimensions work", {
expect_equal(nrow(
dyadicdist::ddist_xy(x = df_1, y = df_2, ids = c("id", "id"))
),
nrow(df_1) * nrow(df_2))
})
ddist_xy(x = df_1, y = df_2, ids = c("id", "id"))
?ddist_xy
dyadicdist::ddist_xy(x = df_1,
y = df_2,
ids = c("id", "id"))
context("Test ddisy_xy_sf")
library(dplyr)
library(tidyverse)
df <- dyadicdist::cities
df_1 <- df %>%
filter(state == "CA")
df_2 <- df %>%
filter(state == "TX")
test_that("output dimensions work", {
expect_equal(nrow(
dyadicdist::ddist_xy(x = df_1,
y = df_2,
ids = c("id", "id"))
),
nrow(df_1) * nrow(df_2))
})
context("Test ddisy_xy_sf")
library(dplyr)
library(tidyverse)
df <- dyadicdist::cities
df_1 <- df %>%
filter(state == "CA")
df_2 <- df %>%
filter(state == "TX")
test_that("output dimensions work", {
expect_equal(nrow(dyadicdist::ddist_xy(df_1,
df_2,
ids = c("id", "id"))),
nrow(df_1) * nrow(df_2))
})
dyadicdist::ddist_xy(df_1,
df_2,
ids = c("id", "id"))
ddist_xy(ca,
tx,
ids = c("id", "id"))
context("Test ddisy_xy_sf")
library(dplyr)
library(tidyverse)
df <- dyadicdist::cities
ca <- df %>%
filter(state == "CA")
tx <- df %>%
filter(state == "TX")
dyadicdist::ddist_xy(ca,
tx,
ids = c("id", "id"))
str(df)
context("Test ddisy_xy_sf")
library(dplyr)
library(tidyverse)
df <- dyadicdist::cities %>%
mutate(id = as.numeric(id))
ca <- df %>%
filter(state == "CA")
tx <- df %>%
filter(state == "TX")
dyadicdist::ddist_xy(ca,
tx,
ids = c("id", "id"))
